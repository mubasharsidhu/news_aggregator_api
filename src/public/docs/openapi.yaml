openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8080'
paths:
  /api/register:
    post:
      summary: 'Register a new user.'
      operationId: registerANewUser
      description: "Validates user input for name, email, and password.\nHashes the password and stores user data in the database.\nReturns a success response with the new user's ID or an error response if validation fails."
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'User registered successfully.'
                  data:
                    user_id: 1
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User registered successfully.'
                  data:
                    type: object
                    properties:
                      user_id:
                        type: integer
                        example: 1
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation failed.'
                  errors:
                    email:
                      - 'The email has already been taken.'
                    password:
                      - 'The password does not meet the required rules.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation failed.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email has already been taken.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password does not meet the required rules.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                  nullable: false
                email:
                  type: string
                  description: 'The email address of the user.'
                  example: john@example.com
                  nullable: false
                password:
                  type: string
                  description: 'The password for the user. Must be at least 8 characters and include letters, numbers, and symbols.'
                  example: P@ssw0rd!
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Must match the password.'
                  example: P@ssw0rd!
                  nullable: false
              required:
                - name
                - email
                - password
                - password_confirmation
      security: []
  /api/login:
    post:
      summary: 'Authenticate a user and issue an API token.'
      operationId: authenticateAUserAndIssueAnAPIToken
      description: "Validates the provided email and password credentials.\nIf credentials are valid, generates a personal access token for the user.\nReturns the user's details and token upon successful login or an error response for invalid credentials."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Login successful.'
                  data:
                    user:
                      id: 1
                      name: 'John Doe'
                      email: john.doe@example.com
                    token: token_string_here
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Login successful.'
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: john.doe@example.com
                      token:
                        type: string
                        example: token_string_here
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Invalid credentials'
                  errors: 'Invalid credentials'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Invalid credentials'
                  errors:
                    type: string
                    example: 'Invalid credentials'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation failed.'
                  errors:
                    email:
                      - 'The email field is required.'
                    password:
                      - 'The password field is required.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation failed.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                        items:
                          type: string
                      password:
                        type: array
                        example:
                          - 'The password field is required.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: john.doe@example.com
                  nullable: false
                password:
                  type: string
                  description: "The user's password."
                  example: P@ssw0rd!
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'Log out the authenticated user.'
      operationId: logOutTheAuthenticatedUser
      description: "Deletes the user's current API access token.\nReturns a success response upon successful logout."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Logged out successfully.'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Logged out successfully.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Unauthenticated user.'
                  errors: Unauthenticated.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Unauthenticated user.'
                  errors:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/forgot-password:
    post:
      summary: "Send a password reset link to the user's email."
      operationId: sendAPasswordResetLinkToTheUsersEmail
      description: "Validates the provided email address.\nSends a password reset email if the email is valid and registered.\nReturns a success response if the link is sent or an error response otherwise."
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Password reset link sent.'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Password reset link sent.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation failed.'
                  errors:
                    email:
                      - 'The email field is required.'
                      - 'The email must be a valid email address.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation failed.'
                  errors:
                    type: object
                    properties:
                      email:
                        type: array
                        example:
                          - 'The email field is required.'
                          - 'The email must be a valid email address.'
                        items:
                          type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Unable to send reset link.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Unable to send reset link.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: "The user's email address."
                  example: john.doe@example.com
                  nullable: false
              required:
                - email
      security: []
  '/api/reset-password/{token}':
    post:
      summary: "Reset the user's password using a valid reset token."
      operationId: resetTheUsersPasswordUsingAValidResetToken
      description: "Validates the new password and the reset token.\nUpdates the user's password in the database upon successful validation.\nReturns a success response or an error response for invalid token or validation failure."
      parameters:
        -
          in: query
          name: token
          description: "The reset token sent to the user's email."
          example: abc123resetToken
          required: true
          schema:
            type: string
            description: "The reset token sent to the user's email."
            example: abc123resetToken
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Password reset successful.'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Password reset successful.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'The provided token is invalid.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'The provided token is invalid.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation failed.'
                  errors:
                    password:
                      - 'The password must be at least 8 characters.'
                      - 'The password must contain letters, numbers, and symbols.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation failed.'
                  errors:
                    type: object
                    properties:
                      password:
                        type: array
                        example:
                          - 'The password must be at least 8 characters.'
                          - 'The password must contain letters, numbers, and symbols.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: 'The new password. Must be at least 8 characters, with letters, numbers, symbols, and mixed case.'
                  example: Password@123
                  nullable: false
                password_confirmation:
                  type: string
                  description: 'Confirmation of the new password.'
                  example: Password@123
                  nullable: false
              required:
                - password
                - password_confirmation
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: impedit
        required: true
        schema:
          type: string
  /api/user:
    get:
      summary: 'Get user detail'
      operationId: getUserDetail
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'User retrieved successfully.'
                  data:
                    id: 1
                    name: 'John Doe'
                    email: john.doe@example.com
                    email_verified_at: '2024-01-01T12:00:00.000000Z'
                    created_at: '2023-12-01T08:30:00.000000Z'
                    updated_at: '2024-01-10T14:45:00.000000Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User retrieved successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john.doe@example.com
                      email_verified_at:
                        type: string
                        example: '2024-01-01T12:00:00.000000Z'
                      created_at:
                        type: string
                        example: '2023-12-01T08:30:00.000000Z'
                      updated_at:
                        type: string
                        example: '2024-01-10T14:45:00.000000Z'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/user/preferences:
    get:
      summary: "Retrieve the authenticated user's preferences."
      operationId: retrieveTheAuthenticatedUsersPreferences
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'User preferences retrieved successfully.'
                  data:
                    preferred_sources:
                      - TechCrunch
                      - 'BBC News'
                    preferred_authors:
                      - 'Jane Doe'
                      - 'John Smith'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'User preferences retrieved successfully.'
                  data:
                    type: object
                    properties:
                      preferred_sources:
                        type: array
                        example:
                          - TechCrunch
                          - 'BBC News'
                        items:
                          type: string
                      preferred_authors:
                        type: array
                        example:
                          - 'Jane Doe'
                          - 'John Smith'
                        items:
                          type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthenticated.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    put:
      summary: "Update the authenticated user's preferences."
      operationId: updateTheAuthenticatedUsersPreferences
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Preferences updated successfully.'
                  data:
                    preferred_sources:
                      - TechCrunch
                      - 'BBC News'
                    preferred_authors:
                      - 'Jane Doe'
                      - 'John Smith'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Preferences updated successfully.'
                  data:
                    type: object
                    properties:
                      preferred_sources:
                        type: array
                        example:
                          - TechCrunch
                          - 'BBC News'
                        items:
                          type: string
                      preferred_authors:
                        type: array
                        example:
                          - 'Jane Doe'
                          - 'John Smith'
                        items:
                          type: string
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Validation failed.'
                  errors:
                    preferred_sources:
                      - 'The preferred_sources field must be an array.'
                    preferred_authors:
                      - 'The preferred_authors field must be an array.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Validation failed.'
                  errors:
                    type: object
                    properties:
                      preferred_sources:
                        type: array
                        example:
                          - 'The preferred_sources field must be an array.'
                        items:
                          type: string
                      preferred_authors:
                        type: array
                        example:
                          - 'The preferred_authors field must be an array.'
                        items:
                          type: string
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                preferred_sources:
                  type: array
                  description: 'Optional. A list of preferred sources.'
                  example:
                    - TechCrunch
                    - 'BBC News'
                  items:
                    type: string
                preferred_authors:
                  type: array
                  description: 'Optional. A list of preferred authors.'
                  example:
                    - 'Jane Doe'
                    - 'John Smith'
                  items:
                    type: string
  /api/articles/feeds/personalized:
    get:
      summary: Search
      operationId: search
      description: 'Retrieve a list of articles based on filters such as sources, authors, keywords, and date.'
      parameters:
        -
          in: query
          name: sources
          description: 'Optional. Comma-separated list of sources to filter articles by.'
          example: '"TechCrunch,BBC News".'
          required: false
          schema:
            type: string
            description: 'Optional. Comma-separated list of sources to filter articles by.'
            example: '"TechCrunch,BBC News".'
            nullable: false
        -
          in: query
          name: authors
          description: 'Optional. Comma-separated list of authors to filter articles by.'
          example: '"Jane Doe,John Smith".'
          required: false
          schema:
            type: string
            description: 'Optional. Comma-separated list of authors to filter articles by.'
            example: '"Jane Doe,John Smith".'
            nullable: false
        -
          in: query
          name: keyword
          description: 'Optional. A keyword to search for in the article title or description.'
          example: '"AI".'
          required: false
          schema:
            type: string
            description: 'Optional. A keyword to search for in the article title or description.'
            example: '"AI".'
            nullable: false
        -
          in: query
          name: date
          description: 'Optional. Date to filter articles by their published date (format: YYYY-MM-DD).'
          example: '"2024-12-01".'
          required: false
          schema:
            type: string
            description: 'Optional. Date to filter articles by their published date (format: YYYY-MM-DD).'
            example: '"2024-12-01".'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Articles retrieved successfully.'
                  data:
                    -
                      id: 1
                      title: 'Exploring AI Innovations'
                      description: 'An in-depth look at the latest advancements in AI technology.'
                      source: TechCrunch
                      author: 'Jane Doe'
                      publishedAt: '2024-12-01'
                    -
                      id: 2
                      title: 'The Future of Quantum Computing'
                      description: 'How quantum computing is shaping the tech industry.'
                      source: 'BBC News'
                      author: 'John Smith'
                      publishedAt: '2024-12-01'
                  meta:
                    current_page: 1
                    last_page: 5
                    per_page: 10
                    total: 50
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Articles retrieved successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'Exploring AI Innovations'
                        description: 'An in-depth look at the latest advancements in AI technology.'
                        source: TechCrunch
                        author: 'Jane Doe'
                        publishedAt: '2024-12-01'
                      -
                        id: 2
                        title: 'The Future of Quantum Computing'
                        description: 'How quantum computing is shaping the tech industry.'
                        source: 'BBC News'
                        author: 'John Smith'
                        publishedAt: '2024-12-01'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Exploring AI Innovations'
                        description:
                          type: string
                          example: 'An in-depth look at the latest advancements in AI technology.'
                        source:
                          type: string
                          example: TechCrunch
                        author:
                          type: string
                          example: 'Jane Doe'
                        publishedAt:
                          type: string
                          example: '2024-12-01'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 5
                      per_page:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 50
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthorized.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthorized.
      tags:
        - Endpoints
  /api/articles/feeds:
    get:
      summary: Search
      operationId: search
      description: 'Retrieve a list of articles based on filters such as sources, authors, keywords, and date.'
      parameters:
        -
          in: query
          name: sources
          description: 'Optional. Comma-separated list of sources to filter articles by.'
          example: '"TechCrunch,BBC News".'
          required: false
          schema:
            type: string
            description: 'Optional. Comma-separated list of sources to filter articles by.'
            example: '"TechCrunch,BBC News".'
            nullable: false
        -
          in: query
          name: authors
          description: 'Optional. Comma-separated list of authors to filter articles by.'
          example: '"Jane Doe,John Smith".'
          required: false
          schema:
            type: string
            description: 'Optional. Comma-separated list of authors to filter articles by.'
            example: '"Jane Doe,John Smith".'
            nullable: false
        -
          in: query
          name: keyword
          description: 'Optional. A keyword to search for in the article title or description.'
          example: '"AI".'
          required: false
          schema:
            type: string
            description: 'Optional. A keyword to search for in the article title or description.'
            example: '"AI".'
            nullable: false
        -
          in: query
          name: date
          description: 'Optional. Date to filter articles by their published date (format: YYYY-MM-DD).'
          example: '"2024-12-01".'
          required: false
          schema:
            type: string
            description: 'Optional. Date to filter articles by their published date (format: YYYY-MM-DD).'
            example: '"2024-12-01".'
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Articles retrieved successfully.'
                  data:
                    -
                      id: 1
                      title: 'Exploring AI Innovations'
                      description: 'An in-depth look at the latest advancements in AI technology.'
                      source: TechCrunch
                      author: 'Jane Doe'
                      publishedAt: '2024-12-01'
                    -
                      id: 2
                      title: 'The Future of Quantum Computing'
                      description: 'How quantum computing is shaping the tech industry.'
                      source: 'BBC News'
                      author: 'John Smith'
                      publishedAt: '2024-12-01'
                  meta:
                    current_page: 1
                    last_page: 5
                    per_page: 10
                    total: 50
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Articles retrieved successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        title: 'Exploring AI Innovations'
                        description: 'An in-depth look at the latest advancements in AI technology.'
                        source: TechCrunch
                        author: 'Jane Doe'
                        publishedAt: '2024-12-01'
                      -
                        id: 2
                        title: 'The Future of Quantum Computing'
                        description: 'How quantum computing is shaping the tech industry.'
                        source: 'BBC News'
                        author: 'John Smith'
                        publishedAt: '2024-12-01'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: 'Exploring AI Innovations'
                        description:
                          type: string
                          example: 'An in-depth look at the latest advancements in AI technology.'
                        source:
                          type: string
                          example: TechCrunch
                        author:
                          type: string
                          example: 'Jane Doe'
                        publishedAt:
                          type: string
                          example: '2024-12-01'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 5
                      per_page:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 50
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: Unauthorized.
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Unauthorized.
      tags:
        - Endpoints
  '/api/article/{id}':
    get:
      summary: 'Retrieve details of a specific article by its ID.'
      operationId: retrieveDetailsOfASpecificArticleByItsID
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Article retrieved.'
                  data:
                    id: 123
                    title: 'Exploring AI Innovations'
                    description: 'An in-depth look at the latest advancements in AI technology.'
                    source: TechCrunch
                    author: 'Jane Doe'
                    publishedAt: '2024-12-01'
                    content: 'The world of AI continues to evolve at a rapid pace...'
                    created_at: '2024-11-30T12:00:00Z'
                    updated_at: '2024-11-30T12:00:00Z'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Article retrieved.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 123
                      title:
                        type: string
                        example: 'Exploring AI Innovations'
                      description:
                        type: string
                        example: 'An in-depth look at the latest advancements in AI technology.'
                      source:
                        type: string
                        example: TechCrunch
                      author:
                        type: string
                        example: 'Jane Doe'
                      publishedAt:
                        type: string
                        example: '2024-12-01'
                      content:
                        type: string
                        example: 'The world of AI continues to evolve at a rapid pace...'
                      created_at:
                        type: string
                        example: '2024-11-30T12:00:00Z'
                      updated_at:
                        type: string
                        example: '2024-11-30T12:00:00Z'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Article not found.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Article not found.'
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'An unexpected error occurred. Please try again later.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'An unexpected error occurred. Please try again later.'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the article to retrieve.'
        example: 123
        required: true
        schema:
          type: integer
  /api/articles/unique-sources:
    get:
      summary: 'Retrieve a list of unique article sources.'
      operationId: retrieveAListOfUniqueArticleSources
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Unique sources retrieved successfully.'
                  data:
                    - TechCrunch
                    - 'BBC News'
                    - 'The Verge'
                    - Wired
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Unique sources retrieved successfully.'
                  data:
                    type: array
                    example:
                      - TechCrunch
                      - 'BBC News'
                      - 'The Verge'
                      - Wired
                    items:
                      type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'An unexpected error occurred. Please try again later.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'An unexpected error occurred. Please try again later.'
      tags:
        - Endpoints
  /api/articles/unique-authors:
    get:
      summary: 'Retrieve a list of unique article authors.'
      operationId: retrieveAListOfUniqueArticleAuthors
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Unique authors retrieved successfully.'
                  data:
                    - 'John Doe'
                    - 'Jane Smith'
                    - 'Alice Johnson'
                    - 'Bob Williams'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Unique authors retrieved successfully.'
                  data:
                    type: array
                    example:
                      - 'John Doe'
                      - 'Jane Smith'
                      - 'Alice Johnson'
                      - 'Bob Williams'
                    items:
                      type: string
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'An unexpected error occurred. Please try again later.'
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'An unexpected error occurred. Please try again later.'
      tags:
        - Endpoints
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
